<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.0.7</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>es.bluesolution</groupId>
  <artifactId>grpc-kafka-stream-video-server</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>grpc-kafka-stream-video-server</name>
  <description>grpc and webflux stream video server</description>
  <properties>
    <java.version>20</java.version>
    <grpc-netty.version>1.53.0</grpc-netty.version>
    <spring-cloud.version>4.0.1</spring-cloud.version>
    <opentelemetry-exporter-otlp.version>1.26.0</opentelemetry-exporter-otlp.version>
    <spring-cloud-dependencies.version>2022.0.2</spring-cloud-dependencies.version>
    <spring-cloud-sleuth-otel-dependencies.version>1.1.3
    </spring-cloud-sleuth-otel-dependencies.version>
    <spring-cloud-starter-sleuth.version>3.1.8</spring-cloud-starter-sleuth.version>
    <loki-logback-appender.version>1.4.0</loki-logback-appender.version>
    <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
    <os-maven-plugin.version>1.6.1</os-maven-plugin.version>
    <opentracing-spring-jaeger-cloud-starter.version>3.3.1
    </opentracing-spring-jaeger-cloud-starter.version>
    <nexus-staging-maven.version>1.6.13</nexus-staging-maven.version>
    <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
    <flyway-core.version>9.17.0</flyway-core.version>
    <opentelemetry-exporter-jaeger.version>1.26.0</opentelemetry-exporter-jaeger.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <version>${grpc-netty.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc-netty.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc-netty.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.8.0</version>
    </dependency>
    <!--		<dependency>-->
    <!--			<groupId>org.springframework.boot</groupId>-->
    <!--			<artifactId>spring-boot-starter-data-mongodb</artifactId>-->
    <!--		</dependency>-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <!--		opentelemetry-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <!--    AOP is needed for the `Observed` annotation-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <!--    Tracing dependencies after Spring Boot 3-->
    <!--    https://www.baeldung.com/spring-boot-3-observability-->
    <!--    https://spring.io/guides/tutorials/metrics-and-tracing/-->
    <!--    https://github.com/micrometer-metrics/tracing/wiki/Spring-Cloud-Sleuth-3.1-Migration-Guide-->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-otel</artifactId>
    </dependency>
    <!--    <dependency>-->
    <!--      <groupId>io.opentracing.contrib</groupId>-->
    <!--      <artifactId>opentracing-spring-jaeger-cloud-starter</artifactId>-->
    <!--      <version>${opentracing-spring-jaeger-cloud-starter.version}</version>-->
    <!--    </dependency>-->
    <!--    Reactive stream observation with reactor-core-micrometer-->
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core-micrometer</artifactId>
    </dependency>

    <!--    Without this dependency actuator does not provide a /actuator/prometheus endpoint.-->
<!--    <dependency>-->
<!--      <groupId>io.micrometer</groupId>-->
<!--      <artifactId>micrometer-registry-prometheus</artifactId>-->
<!--    </dependency>-->
    <!--   We are not going to prometheus directly, we are sending metrics to Otel Collector-->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-otlp</artifactId>
    </dependency>
    <!--    <dependency>-->
    <!--      <groupId>io.micrometer</groupId>-->
    <!--      <artifactId>micrometer-tracing-bridge-otel</artifactId>-->
    <!--    </dependency>-->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-observation</artifactId>
    </dependency>
    <!--    <dependency>-->
    <!--      <groupId>io.opentelemetry</groupId>-->
    <!--      <artifactId>opentelemetry-exporter-jaeger</artifactId>-->
    <!--      <version>${opentelemetry-exporter-jaeger.version}</version>-->
    <!--    </dependency>-->
    <!--    <dependency>-->
    <!--      <groupId>io.opentelemetry</groupId>-->
    <!--      <artifactId>opentelemetry-exporter-otlp</artifactId>-->
    <!--      <version>${opentelemetry-exporter-otlp.version}</version>-->
    <!--    </dependency>-->
    <!--    Logback Appender for Grafana Loki-->
    <dependency>
      <groupId>com.github.loki4j</groupId>
      <artifactId>loki-logback-appender</artifactId>
      <version>${loki-logback-appender.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-observation-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-tracing-bom</artifactId>
        <version>${micrometer-tracing.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>
  <!--    <distributionManagement>-->
  <!--        <snapshotRepository>-->
  <!--            <id>nexus-snapshots</id>-->
  <!--            <url>http://blue-ci-cd.com/nexus/repository/maven-snapshots/</url>-->
  <!--        </snapshotRepository>-->
  <!--        <repository>-->
  <!--            <id>nexus-releases</id>-->
  <!--            <url>http://blue-ci-cd.com/nexus/repository/maven-releases/</url>-->
  <!--        </repository>-->
  <!--    </distributionManagement>-->
  <distributionManagement>
    <snapshotRepository>
      <id>nexus-snapshots</id>
      <url>http://nexus-service.nexus:8081/nexus/repository/maven-snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>nexus-releases</id>
      <url>http://nexus-service.nexus:8081/nexus/repository/maven-releases/</url>
    </repository>
  </distributionManagement>
  <pluginRepositories>
    <pluginRepository>
      <id>spring-snapshots</id>
      <url>https://repo.spring.io/snapshot</url>
    </pluginRepository>
    <pluginRepository>
      <id>spring-milestones</id>
      <url>https://repo.spring.io/milestone</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus-staging-maven.version}</version>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <serverId>nexus</serverId>
          <!--                    <nexusUrl>http://blue-ci-cd.com/nexus/</nexusUrl>-->
          <nexusUrl>http://nexus-service.nexus:8081/nexus/</nexusUrl>
          <skipStaging>true</skipStaging>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${protobuf-maven-plugin.version}</version>
        <configuration>
          <protocArtifact>
            com.google.protobuf:protoc:3.3.0:exe:${os.detected.classifier}
          </protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>
            io.grpc:protoc-gen-grpc-java:1.4.0:exe:${os.detected.classifier}
          </pluginArtifact>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

</project>
